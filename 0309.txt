node.js << 자바스크립트 기반 언어
- ryan dahl이 2009년에 발표
- 확장성 있는 network application 빌드를 목표로
- 크롬의 *V8엔진을 사용
- node.js 내부는 C / C++로 제작
- 홀수버전과 *짝수버전(LST)

node.js의 장단점
- 높은 처리 성능을 가지고 있다. < 단일 스레드의 논 블로킹 이벤트 기반 비동기 방식으로 처리
- 내장 http 서버 라이브러리를 포함하고 있어 웹 서버에서 별도의
  소프트웨어 없이 동작하는 것이 가능하다. > 웹 서버의 동작에 있어 더 많은 통제를 가능하게 함.
- 프론트엔드 뿐만 아니라 백엔드 개발 환경을 구성할 수 있기 때문에
  생산성이 높고 러닝 커브가 줄어든다.

- 해당 코드를 수행이 되어야지 코드에서 에러가 났는지 확인이 가능하며 에러가 날 경우
  프로세스 자체가 내려갈 수 있다.
- 단일 스레드이기 때문에 하나의 작업이 오래 걸리는 웹 서비스일 경우 애플리케이션의
  성능이 저하될 수 있다.
-----------------------------------------------------------------------------------------------------
장점
- 자바스크립트로 서버를 개발(서버 사이드)
- 싱글스레드로 작성
- 이벤트기반 논블로킹 및 비동기 처리 << 콜백
			ㄴ 순서대로 코드가 수행되지 않는 것
- 간단한 확장모듈 관리(npm)
....빠른 개발 속도, 풍부한 생태계(오픈소스)........

단점
- cpu 위주의 복잡한 계산작업에 약하다
- 콜백 지옥.... > 유지하기 힘들어용
....미성숙한 생태계........
	ㄴ 과도하게 남발되는 npm
	ㄴ 제대로 문서화, 테스트 되지 않은 도구들이 넘침
	ㄴ 품질보장 X
	ㄴ 다른 기술들에 비해 제공되는 환경 부족